#!/bin/bash -e
#
# S2I assemble script for the 'springboot-gradle-s2i' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#   https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

echo "HOME is ${HOME}"

if [ ! -z $HTTP_PROXY ]; then
	echo "---> Setting npm http proxy to $HTTP_PROXY"
	npm config set proxy $HTTP_PROXY
fi

if [ ! -z $http_proxy ]; then
	echo "---> Setting npm http proxy to $http_proxy"
	npm config set proxy $http_proxy
fi

if [ ! -z $HTTPS_PROXY ]; then
	echo "---> Setting npm https proxy to $HTTPS_PROXY"
	npm config set https-proxy $HTTPS_PROXY
fi

if [ ! -z $https_proxy ]; then
	echo "---> Setting npm https proxy to $https_proxy"
	npm config set https-proxy $https_proxy
fi

# Change the npm registry mirror if provided
if [ ! -z "$NPM_MIRROR" ]; then
	echo "---> Setting the npm package mirror to $NPM_MIRROR"
	npm config set registry $NPM_MIRROR
fi


if [[ "$1" == "-h" ]]; then
    # If the 'springboot-gradle-s2i' assemble script is executed with '-h' flag,
    # print the usage.
    exec /usr/local/s2i/usage
  fi

if [ -d "/tmp/artifacts/.gradle" ]; then
  echo "Restoring saved artifacts from prior build..."
  mv -f /tmp/artifacts/.gradle ${HOME}/
  else
  echo "No saved artifacts from previous build"
  fi

  #If GRADLE_ARGS is unset or blank, default to "clean build -x test"
  if [ -z "$GRADLE_ARGS" ]; then
    GRADLE_ARGS="--no-daemon clean build -x test"
    echo "---> \$GRADLE_ARGS not set, defaulting to [${GRADLE_ARGS}]"
  else
    echo "---> \$GRADLE_ARGS set with value: [${GRADLE_ARGS}]"
  fi

echo "---> Building application from source..."
cd /tmp/src
sh $GRADLE_HOME/bin/gradle $GRADLE_ARGS

echo "---> Copying built application to app-root..."
# TODO this may fail if there are more than one jar generated
cp -a $ARTIFACT_DIR/*.jar  /build/libs/

